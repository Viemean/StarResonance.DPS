<UserControl x:Class="StarResonance.DPS.Views.TitleBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:StarResonance.DPS.ViewModels"
             xmlns:converters="clr-namespace:StarResonance.DPS.Converters"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel, IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:OpacityToBrushConverter x:Key="OpacityToBrushConverter" />

        <Style x:Key="TransparentButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="5,2" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#44FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DarkComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Padding" Value="4,2" />
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="#44FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#88FFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxTransparentToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="Transparent" BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1"
                                    HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="templateRoot" Value="#44FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="templateRoot" Value="#66FFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DarkComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource DarkComboBoxItemStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Border x:Name="dropDownBorder" Background="#DD222222" BorderBrush="Transparent"
                                        BorderThickness="1" CornerRadius="4"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <ItemsPresenter x:Name="PART_ItemsPresenter" IsHitTestVisible="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"
                                          Grid.Column="0"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ComboBoxTransparentToggleButton}" />
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Border
            Background="{Binding WindowOpacity, Converter={StaticResource OpacityToBrushConverter}, ConverterParameter='#333333'}"
            CornerRadius="8,8,0,0" Padding="5">
            <DockPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="—" ToolTip="{Binding Localization[Minimize]}" FontWeight="Bold"
                            Click="MinimizeButton_Click" Style="{StaticResource TransparentButtonStyle}" />
                    <Button Content="{Binding LockIconContent}" ToolTip="{Binding Localization[LockUnlockWindow]}"
                            Command="{Binding ToggleLockCommand}" Style="{StaticResource TransparentButtonStyle}" />
                    <Button Content="⚙" ToolTip="{Binding Localization[Settings]}"
                            Command="{Binding ToggleSettingsCommand}" Style="{StaticResource TransparentButtonStyle}" />
                </StackPanel>
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center" Margin="5,0">
                    <StackPanel Orientation="Horizontal" Visibility="{Binding RealtimeModeVisibility}">
                        <Button Content="💾" ToolTip="创建快照" Command="{Binding SnapshotViewModel.SaveSnapshotCommand}"
                                Padding="8,2" Style="{StaticResource TransparentButtonStyle}" />
                        <Button Content="📂" ToolTip="导入快照" Command="{Binding SnapshotViewModel.LoadSnapshotCommand}"
                                Padding="8,2" Style="{StaticResource TransparentButtonStyle}" Margin="5,0,0,0" />
                    </StackPanel>
                    <TextBlock Text="{Binding CurrentTime}" Foreground="Cyan" FontWeight="Bold"
                               VerticalAlignment="Center" Margin="8,0,15,0" />
                </StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="200" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Background="#22FFFFFF" CornerRadius="4" Height="24"
                            VerticalAlignment="Center">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" ItemsSource="{Binding LocalizedSearchModes}"
                                      SelectedItem="{Binding SelectedSearchModeItem}" VerticalAlignment="Center"
                                      Style="{StaticResource DarkComboBoxStyle}"
                                      BorderThickness="0">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DisplayName}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Grid Grid.Column="1">
                                <TextBox x:Name="SearchTextBox"
                                         Text="{Binding SearchFilterText, UpdateSourceTrigger=PropertyChanged}"
                                         Background="Transparent" Foreground="White" BorderThickness="0"
                                         VerticalContentAlignment="Center" Padding="5,0,5,0" CaretBrush="White" />
                                <TextBlock Text="{Binding SearchPlaceholderText}" Foreground="#66FFFFFF"
                                           IsHitTestVisible="False" VerticalAlignment="Center" Padding="7,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=SearchTextBox}"
                                                             Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Grid>
                    </Border>
                    <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal"
                                    Visibility="{Binding SnapshotViewModel.IsInSnapshotMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="[快照模式] " Foreground="Orange" FontWeight="Bold" VerticalAlignment="Center" />
                            <TextBlock Text="{Binding SnapshotViewModel.LoadedSnapshotFileName}" Foreground="White"
                                       VerticalAlignment="Center" />
                            <Button Content="返回实时" Command="{Binding SnapshotViewModel.ExitSnapshotModeCommand}"
                                    Margin="10,0,0,0" Style="{StaticResource TransparentButtonStyle}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    Visibility="{Binding SnapshotViewModel.IsInSnapshotMode, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
                            <Ellipse Width="10" Height="10" Fill="{Binding PauseStatusColor}" Margin="5,0,5,0"
                                     VerticalAlignment="Center" />
                            <Button Content="{Binding PauseButtonText}" Click="PauseButton_Click"
                                    Style="{StaticResource TransparentButtonStyle}" />
                            <Button Content="{Binding Localization[Reset]}" Click="ResetButton_Click"
                                    Style="{StaticResource TransparentButtonStyle}" />
                            <Separator Margin="5,0" />
                            <Ellipse Width="10" Height="10" Fill="{Binding ConnectionStatusColor}" Margin="0,0,5,0"
                                     VerticalAlignment="Center" />
                            <TextBlock Text="{Binding ConnectionStatusText}" Foreground="Gray"
                                       VerticalAlignment="Center" />
                            <Separator Margin="5,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                            <Button Content="❌" ToolTip="{Binding Localization[AbortCountdown]}"
                                    VerticalAlignment="Center" Click="AbortCountdownButton_Click" Margin="0,0,5,0"
                                    Style="{StaticResource TransparentButtonStyle}"
                                    Visibility="{Binding CountdownRunningVisibility}" />
                            <Grid VerticalAlignment="Center" Margin="0,0,5,0" MinWidth="30">
                                <TextBlock Text="{Binding CountdownText}" Foreground="Orange" FontWeight="Bold"
                                           HorizontalAlignment="Center"
                                           Visibility="{Binding CountdownRunningVisibility}" />
                                <Grid Visibility="{Binding RealtimeModeVisibility}">
                                    <TextBlock Text="{Binding Localization[Pause]}" Foreground="Red" FontWeight="Bold"
                                               HorizontalAlignment="Center"
                                               Visibility="{Binding PauseStatusVisibility}" />
                                    <TextBlock Text="{Binding FightDurationText}" Foreground="White" FontWeight="Bold"
                                               HorizontalAlignment="Center"
                                               Visibility="{Binding FightDurationVisibility}" />
                                </Grid>
                            </Grid>
                            <Button x:Name="CountdownButton" Command="{Binding OpenCountdownOptionsCommand}"
                                    ToolTip="{Binding Localization[Countdown]}"
                                    Visibility="{Binding RealtimeModeVisibility}"
                                    Style="{StaticResource TransparentButtonStyle}">
                                <TextBlock Text="🕒" Foreground="White" VerticalAlignment="Center" />
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </DockPanel>
        </Border>
        <Grid x:Name="RootGrid">
            <Popup x:Name="CountdownOptionsPopup" PlacementTarget="{Binding ElementName=CountdownButton}"
                   DataContext="{Binding DataContext, ElementName=RootGrid}"
                   Placement="Bottom" StaysOpen="False" AllowsTransparency="True"
                   IsOpen="{Binding IsCountdownOptionsPopupOpen, Mode=TwoWay}">
                <Border CornerRadius="5"
                        Background="{Binding WindowOpacity, Converter={StaticResource OpacityToBrushConverter}, ConverterParameter='#222222'}"
                        Padding="5" Margin="5"
                        Opacity="{Binding WindowOpacity}" TextBlock.FontSize="{Binding FontSize}">
                    <StackPanel>
                        <Button Content="{Binding Localization[OneMinute]}" Command="{Binding StartCountdownCommand}"
                                CommandParameter="60" Style="{StaticResource TransparentButtonStyle}" />
                        <Button Content="{Binding Localization[FiveMinutes]}" Command="{Binding StartCountdownCommand}"
                                CommandParameter="300" Style="{StaticResource TransparentButtonStyle}" />
                        <Button Content="{Binding Localization[Custom]}" Command="{Binding OpenCustomCountdownCommand}"
                                Style="{StaticResource TransparentButtonStyle}" />
                    </StackPanel>
                </Border>
            </Popup>

            <Popup x:Name="CustomCountdownPopup" Placement="Center" StaysOpen="False" AllowsTransparency="True"
                   DataContext="{Binding DataContext, ElementName=RootGrid}"
                   IsOpen="{Binding IsCustomCountdownPopupOpen, Mode=TwoWay}"
                   Opened="CustomCountdownPopup_Opened">
                <Border CornerRadius="5"
                        Background="{Binding WindowOpacity, Converter={StaticResource OpacityToBrushConverter}, ConverterParameter='#222222'}"
                        Padding="15"
                        Opacity="{Binding WindowOpacity}" TextBlock.FontSize="{Binding FontSize}">
                    <StackPanel>
                        <TextBlock Text="{Binding Localization[EnterCountdownMinutes]}" Foreground="White" />
                        <TextBox x:Name="CountdownTextBox" Margin="0,5,0,10"
                                 Text="{Binding CustomCountdownMinutes, Mode=TwoWay}"
                                 ToolTip="{Binding Localization[Tooltip_MaxCountdown]}" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="{Binding Localization[Start]}" IsDefault="True"
                                    Command="{Binding StartCustomCountdownCommand}" Margin="0,0,10,0" />
                            <Button Content="{Binding Localization[Cancel]}" IsCancel="True"
                                    Command="{Binding CancelCustomCountdownCommand}" />
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
    </Grid>
</UserControl>