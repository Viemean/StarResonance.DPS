<Window x:Class="StarResonance.DPS.Views.MainWindow"
        x:Name="RootWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:StarResonance.DPS.ViewModels"
        xmlns:views="clr-namespace:StarResonance.DPS.Views"
        xmlns:converters="clr-namespace:StarResonance.DPS.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel, IsDesignTimeCreatable=True}"
        Title="星痕共鸣DPS统计"
        Height="{Binding WindowHeight, Mode=TwoWay}"
        Width="{Binding WindowWidth, Mode=TwoWay}"
        Top="{Binding WindowTop, Mode=TwoWay}"
        Left="{Binding WindowLeft, Mode=TwoWay}"
        MinWidth="530" MinHeight="180"
        Topmost="True" ShowInTaskbar="True"
        FontFamily="{Binding SelectedFontFamily}"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        FontSize="{Binding FontSize}"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <converters:SortDirectionToArrowConverter x:Key="SortDirectionToArrowConverter" />
        <converters:SortColumnVisibilityConverter x:Key="SortColumnVisibilityConverter" />

        <Style x:Key="DarkComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Padding" Value="4,2" />
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="#44FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#88FFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxTransparentToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="#555" BorderBrush="#666"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1"
                                    HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.5,2.5 L 5,0 Z" Fill="White"
                                      HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="templateRoot" Value="#44FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="templateRoot" Value="#66FFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DarkComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#666" />
            <Setter Property="Background" Value="#555" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource DarkComboBoxItemStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <!-- <ColumnDefinition Width="0" /> -->
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Border x:Name="dropDownBorder"
                                        Background="#DD222222"
                                        BorderBrush="#888"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <ItemsPresenter x:Name="PART_ItemsPresenter" IsHitTestVisible="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"
                                          Grid.Column="0"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ComboBoxTransparentToggleButton}" />
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border CornerRadius="5" Background="#CC222222" Padding="8,5">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="thumbBorder" CornerRadius="3" Background="#66FFFFFF" BorderThickness="0" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="#99FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="#CCFFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Border CornerRadius="4" Background="#22FFFFFF" />
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Width="8">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                                  Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                                  Command="ScrollBar.PageUpCommand" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HeaderLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold" /><Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="HeaderButtonStyle" TargetType="Button" BasedOn="{StaticResource TransparentButtonStyle}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Command"
                    Value="{Binding DataContext.SortByCommand, ElementName=RootWindow}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                           Style="{StaticResource HeaderLabel}"
                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock
                                    Text="{Binding DataContext.SortDirection, ElementName=RootWindow, Converter={StaticResource SortDirectionToArrowConverter}}"
                                    Margin="4,0,0,0" VerticalAlignment="Center"
                                    FontSize="10"
                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource SortColumnVisibilityConverter}">
                                            <Binding Path="DataContext.SortColumn" ElementName="RootWindow" />
                                            <Binding Path="CommandParameter"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>

        <Border Background="#222222" CornerRadius="8" BorderBrush="#555" BorderThickness="1"
                x:Name="MainBorder" Opacity="{Binding WindowOpacity}" />

        <Grid Opacity="{Binding FontOpacity}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /><RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Background="#333" CornerRadius="8,8,0,0" Padding="5"
                        MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">

                    <DockPanel>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="—" ToolTip="{Binding Localization[Minimize]}" FontWeight="Bold"
                                    Click="MinimizeButton_Click" Style="{StaticResource TransparentButtonStyle}" />
                            <Button Content="{Binding LockIconContent}"
                                    ToolTip="{Binding Localization[LockUnlockWindow]}" Click="LockButton_Click"
                                    Style="{StaticResource TransparentButtonStyle}" />
                            <Button Content="⚙" ToolTip="{Binding Localization[Settings]}" Click="SettingsButton_Click"
                                    Style="{StaticResource TransparentButtonStyle}" />
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center"
                                    Margin="5,0">
                            <StackPanel Orientation="Horizontal" Visibility="{Binding RealtimeModeVisibility}">
                                <Button Content="💾" ToolTip="创建快照"
                                        Command="{Binding SnapshotViewModel.SaveSnapshotCommand}" Padding="8,2"
                                        Style="{StaticResource TransparentButtonStyle}" />
                                <Button Content="📂" ToolTip="导入快照"
                                        Command="{Binding SnapshotViewModel.LoadSnapshotCommand}" Padding="8,2"
                                        Style="{StaticResource TransparentButtonStyle}" Margin="5,0,0,0" />
                            </StackPanel>
                            <TextBlock Text="{Binding CurrentTime}" Foreground="Cyan" FontWeight="Bold"
                                       VerticalAlignment="Center" Margin="8,0,15,0" />
                        </StackPanel>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="200" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Background="#22FFFFFF" CornerRadius="4" Height="24"
                                    VerticalAlignment="Center">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <ComboBox Grid.Column="0"
                                              ItemsSource="{Binding LocalizedSearchModes}"
                                              SelectedItem="{Binding SelectedSearchModeItem}"
                                              VerticalAlignment="Center"
                                              Style="{StaticResource DarkComboBoxStyle}"
                                              Background="Transparent"
                                              BorderThickness="0">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DisplayName}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <Grid Grid.Column="1">
                                        <TextBox x:Name="SearchTextBox"
                                                 Text="{Binding SearchFilterText, UpdateSourceTrigger=PropertyChanged}"
                                                 Background="Transparent" Foreground="White" BorderThickness="0"
                                                 VerticalContentAlignment="Center" Padding="5,0,5,0" CaretBrush="White" />
                                        <TextBlock Text="{Binding SearchPlaceholderText}" Foreground="#66FFFFFF"
                                                   IsHitTestVisible="False" VerticalAlignment="Center"
                                                   Padding="7,0,0,0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding Text, ElementName=SearchTextBox}"
                                                            Value="">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </Grid>
                            </Border>

                            <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal" Visibility="{Binding SnapshotModeVisibility}">
                                    <TextBlock Text="[快照模式] " Foreground="Orange" FontWeight="Bold"
                                               VerticalAlignment="Center" />
                                    <TextBlock Text="{Binding SnapshotViewModel.LoadedSnapshotFileName}"
                                               Foreground="White" VerticalAlignment="Center" />
                                    <Button Content="返回实时"
                                            Command="{Binding SnapshotViewModel.ExitSnapshotModeCommand}"
                                            Margin="10,0,0,0"
                                            Style="{StaticResource TransparentButtonStyle}" />
                                </StackPanel>


                                <StackPanel Orientation="Horizontal" Visibility="{Binding RealtimeModeVisibility}">
                                    <Ellipse Width="10" Height="10" Fill="{Binding PauseStatusColor}" Margin="5,0,5,0"
                                             VerticalAlignment="Center" />
                                    <Button Content="{Binding PauseButtonText}" Click="PauseButton_Click"
                                            Style="{StaticResource TransparentButtonStyle}" />
                                    <Button Content="{Binding Localization[Reset]}" Click="ResetButton_Click"
                                            Style="{StaticResource TransparentButtonStyle}" />
                                    <Separator Margin="5,0" />
                                    <Ellipse Width="10" Height="10" Fill="{Binding ConnectionStatusColor}"
                                             Margin="0,0,5,0" VerticalAlignment="Center" />
                                    <TextBlock Text="{Binding ConnectionStatusText}" Foreground="Gray"
                                               VerticalAlignment="Center" />
                                    <Separator Margin="5,0"
                                               Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                    <Button Content="❌" ToolTip="{Binding Localization[AbortCountdown]}"
                                            VerticalAlignment="Center" Click="AbortCountdownButton_Click"
                                            Margin="0,0,5,0" Style="{StaticResource TransparentButtonStyle}"
                                            Visibility="{Binding CountdownRunningVisibility}" />
                                    <Grid VerticalAlignment="Center" Margin="0,0,5,0" MinWidth="30">
                                        <TextBlock Text="{Binding CountdownText}" Foreground="Orange" FontWeight="Bold"
                                                   HorizontalAlignment="Center"
                                                   Visibility="{Binding CountdownRunningVisibility}" />
                                        <Grid Visibility="{Binding RealtimeModeVisibility}">
                                            <TextBlock Text="{Binding Localization[Pause]}" Foreground="Red"
                                                       FontWeight="Bold" HorizontalAlignment="Center"
                                                       Visibility="{Binding PauseStatusVisibility}" />
                                            <TextBlock Text="{Binding FightDurationText}" Foreground="White"
                                                       FontWeight="Bold" HorizontalAlignment="Center"
                                                       Visibility="{Binding FightDurationVisibility}" />
                                        </Grid>
                                    </Grid>
                                    <Button x:Name="CountdownButton" Command="{Binding OpenCountdownOptionsCommand}"
                                            ToolTip="{Binding Localization[Countdown]}"
                                            Visibility="{Binding RealtimeModeVisibility}"
                                            Style="{StaticResource TransparentButtonStyle}">
                                        <TextBlock Text="🕒" Foreground="White" VerticalAlignment="Center" />
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </DockPanel>
                </Border>

                <Grid Grid.Row="1">
                    <Grid.IsHitTestVisible>
                        <Binding Path="IsHitTestVisible" />
                    </Grid.IsHitTestVisible>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" /><RowDefinition Height="*" /><RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <views:DynamicGrid Grid.Row="0" Margin="5,5,5,0"
                                       ColumnDefinitionsSource="{StaticResource SharedGridColumnDefinitions}">
                        <TextBlock Grid.Column="0" Text="{Binding PlayerCount}"
                                   Style="{StaticResource HeaderLabel}" Foreground="White" HorizontalAlignment="Center" />
                        <Button Grid.Column="1" Content="{Binding Localization[CharacterName]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.Name}"
                                Style="{StaticResource HeaderButtonStyle}" Margin="5,0,0,0" />

                        <Button Grid.Column="2" Content="{Binding Localization[Score]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.FightPoint}"
                                Style="{StaticResource HeaderButtonStyle}" Foreground="Gold" />
                        <Button Grid.Column="3" Content="{Binding Localization[Profession]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.Profession}"
                                Style="{StaticResource HeaderButtonStyle}" />

                        <Button Grid.Column="4" Content="{Binding Localization[TotalDamage]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.TotalDamage}"
                                Style="{StaticResource HeaderButtonStyle}"
                                Foreground="OrangeRed" ToolTip="{Binding TotalDamageSumTooltip}" />
                        <Button Grid.Column="5" Content="{Binding Localization[TotalHealing]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.TotalHealing}"
                                Style="{StaticResource HeaderButtonStyle}"
                                Foreground="Cyan" ToolTip="{Binding TotalHealingSumTooltip}" />
                        <Button Grid.Column="6" Content="{Binding Localization[TotalDPS]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.TotalDps}"
                                Style="{StaticResource HeaderButtonStyle}" Foreground="Yellow"
                                ToolTip="{Binding TotalDpsSumTooltip}" />
                        <Button Grid.Column="7" Content="{Binding Localization[TotalHPS]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.TotalHps}"
                                Style="{StaticResource HeaderButtonStyle}" Foreground="LimeGreen"
                                ToolTip="{Binding TotalHpsSumTooltip}" />
                        <Button Grid.Column="8" Content="{Binding Localization[TakenDamage]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.TakenDamage}"
                                Style="{StaticResource HeaderButtonStyle}"
                                Foreground="DodgerBlue" HorizontalContentAlignment="Right"
                                ToolTip="{Binding TakenDamageSumTooltip}" />
                    </views:DynamicGrid>

                    <ListView Grid.Row="1" ItemsSource="{Binding PlayersView}" Background="Transparent"
                              BorderThickness="0"
                              HorizontalContentAlignment="Stretch" Margin="5,0,0,0"
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                              VirtualizingStackPanel.CacheLength="4,4"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              ScrollViewer.CanContentScroll="True">

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel VirtualizingStackPanel.CacheLength="4,4" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Focusable" Value="False" />
                                <EventSetter Event="MouseDoubleClick" Handler="Player_MouseDoubleClick" />
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ItemTemplate>
                            <DataTemplate DataType="{x:Type viewModels:PlayerViewModel}">
                                <views:PlayerListItemControl />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <views:SettingsView Grid.Row="2"
                                        DataContext="{Binding}"
                                        Visibility="{Binding SettingsVisibility}" />
                </Grid>

                <Border Grid.Row="0" Grid.RowSpan="2" Background="#A0000000" CornerRadius="5" Padding="15,10"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Visibility="{Binding NotificationVisibility}">
                    <TextBlock Text="{Binding NotificationText}" Foreground="White" FontSize="16" />
                </Border>
            </Grid>
        </Grid>

        <Popup x:Name="CountdownOptionsPopup" PlacementTarget="{Binding ElementName=CountdownButton}"
               Placement="Bottom" StaysOpen="False" AllowsTransparency="True"
               IsOpen="{Binding IsCountdownOptionsPopupOpen, Mode=TwoWay}">
            <Border CornerRadius="5" Background="#CC222222" Padding="5" Margin="5"
                    Opacity="{Binding Opacity, ElementName=MainBorder}"
                    TextBlock.FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource AncestorType=Window}}">
                <StackPanel>
                    <Button
                        Content="{Binding DataContext.Localization[OneMinute], RelativeSource={RelativeSource AncestorType=Window}}"
                        Command="{Binding DataContext.StartCountdownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="60" Style="{StaticResource TransparentButtonStyle}" />
                    <Button
                        Content="{Binding DataContext.Localization[FiveMinutes], RelativeSource={RelativeSource AncestorType=Window}}"
                        Command="{Binding DataContext.StartCountdownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="300" Style="{StaticResource TransparentButtonStyle}" />
                    <Button
                        Content="{Binding DataContext.Localization[Custom], RelativeSource={RelativeSource AncestorType=Window}}"
                        Command="{Binding DataContext.OpenCustomCountdownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        Style="{StaticResource TransparentButtonStyle}" />
                </StackPanel>
            </Border>
        </Popup>

        <Popup x:Name="CustomCountdownPopup" Placement="Center" StaysOpen="False" AllowsTransparency="True"
               IsOpen="{Binding IsCustomCountdownPopupOpen, Mode=TwoWay}"
               Opened="CustomCountdownPopup_Opened">
            <Border CornerRadius="5" Background="#DD222222" Padding="15"
                    Opacity="{Binding Opacity, ElementName=MainBorder}"
                    TextBlock.FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource AncestorType=Window}}">
                <StackPanel>
                    <TextBlock Text="{Binding Localization[EnterCountdownMinutes]}" Foreground="White" />
                    <TextBox x:Name="CountdownTextBox" Margin="0,5,0,10"
                             Text="{Binding CustomCountdownMinutes, Mode=TwoWay}"
                             ToolTip="{Binding DataContext.Localization[Tooltip_MaxCountdown], RelativeSource={RelativeSource AncestorType=Window}}" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="{Binding Localization[Start]}" IsDefault="True"
                                Command="{Binding StartCustomCountdownCommand}" Margin="0,0,10,0" />
                        <Button Content="{Binding Localization[Cancel]}" IsCancel="True"
                                Command="{Binding CancelCustomCountdownCommand}" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Popup>
    </Grid>
</Window>