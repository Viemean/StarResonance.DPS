<Window x:Class="StarResonance.DPS.Views.MainWindow"
        x:Name="RootWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:viewModels="clr-namespace:StarResonance.DPS.ViewModels"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:views="clr-namespace:StarResonance.DPS.Views"
        xmlns:converters="clr-namespace:StarResonance.DPS.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel, IsDesignTimeCreatable=True}"
        Title="星痕共鸣DPS统计" Height="350" Width="700" MinWidth="530" MinHeight="180"
        Topmost="True" ShowInTaskbar="True"
        FontFamily="{Binding SelectedFontFamily}"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        FontSize="{Binding FontSize}"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:SortDirectionToArrowConverter x:Key="SortDirectionToArrowConverter" />
        <converters:SortColumnVisibilityConverter x:Key="SortColumnVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:WindowOpacityToFontOpacityConverter x:Key="WindowOpacityToFontOpacityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:FontFamilyNameConverter x:Key="FontFamilyNameConverter" />

        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border CornerRadius="5" Background="#CC222222" Padding="8,5">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="thumbBorder" CornerRadius="3" Background="#66FFFFFF" BorderThickness="0" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="#99FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="#CCFFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Border CornerRadius="4" Background="#22FFFFFF" />
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Width="8">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                                  Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                                  Command="ScrollBar.PageUpCommand" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TransparentButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="5,2" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#44FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HeaderLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold" /><Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="HeaderButtonStyle" TargetType="Button" BasedOn="{StaticResource TransparentButtonStyle}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Command"
                    Value="{Binding DataContext.SortByCommand, ElementName=RootWindow}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                           Style="{StaticResource HeaderLabel}"
                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock
                                    Text="{Binding DataContext.SortDirection, ElementName=RootWindow, Converter={StaticResource SortDirectionToArrowConverter}}"
                                    Margin="4,0,0,0" VerticalAlignment="Center"
                                    FontSize="10"
                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource SortColumnVisibilityConverter}">
                                            <Binding Path="DataContext.SortColumn" ElementName="RootWindow" />
                                            <Binding Path="CommandParameter"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <tb:TaskbarIcon IconSource="/Assets/icon.ico" ToolTipText="星痕共鸣DPS统计 (双击显示)"
                        TrayMouseDoubleClick="TaskbarIcon_OnTrayMouseDoubleClick">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{Binding Localization[RestoreWindow]}" Click="RestoreMenuItem_OnClick" />
                    <MenuItem Header="{Binding Localization[Minimize]}" Click="MinimizeMenuItem_OnClick" />
                    <MenuItem Header="{Binding LockMenuHeaderText}" Click="LockMenuItem_OnClick" />
                    <Separator />
                    <MenuItem Header="{Binding Localization[Exit]}" Command="{Binding ExitApplicationCommand}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <Border Background="#222222" CornerRadius="8" BorderBrush="#555" BorderThickness="1"
                x:Name="MainBorder" Opacity="{Binding WindowOpacity}" />

        <Grid Opacity="{Binding WindowOpacity, Converter={StaticResource WindowOpacityToFontOpacityConverter}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /><RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Background="#333" CornerRadius="8,8,0,0" Padding="5"
                        MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" VerticalAlignment="Center"
                                    Margin="5,0">
                            <Button Content="💾" ToolTip="创建快照"
                                    Command="{Binding SaveSnapshotCommand}" Padding="8,2"
                                    Style="{StaticResource TransparentButtonStyle}" />
                            <Button Content="📂" ToolTip="导入快照"
                                    Command="{Binding LoadSnapshotCommand}" Padding="8,2"
                                    Style="{StaticResource TransparentButtonStyle}" Margin="5,0,0,0" />
                            <TextBlock Text="{Binding CurrentTime}" Foreground="Cyan" FontWeight="Bold"
                                       VerticalAlignment="Center" Margin="8,0,0,0" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right">
                            <Button Content="—" ToolTip="{Binding Localization[Minimize]}" FontWeight="Bold"
                                    Click="MinimizeButton_Click" Style="{StaticResource TransparentButtonStyle}" />
                            <Button Content="{Binding LockIconContent}"
                                    ToolTip="{Binding Localization[LockUnlockWindow]}" Click="LockButton_Click"
                                    Style="{StaticResource TransparentButtonStyle}" />
                            <Button Content="⚙" ToolTip="{Binding Localization[Settings]}" Click="SettingsButton_Click"
                                    Style="{StaticResource TransparentButtonStyle}" />
                        </StackPanel>
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal"
                                        Visibility="{Binding IsInSnapshotMode, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                <Ellipse Width="10" Height="10" Fill="{Binding PauseStatusColor}" Margin="5,0,5,0"
                                         VerticalAlignment="Center" />
                                <Button Content="{Binding PauseButtonText}" Click="PauseButton_Click"
                                        Style="{StaticResource TransparentButtonStyle}" />
                                <Button Content="{Binding Localization[Reset]}" Click="ResetButton_Click"
                                        Style="{StaticResource TransparentButtonStyle}" />
                                <Separator Margin="5,0" />
                                <Ellipse Width="10" Height="10" Fill="{Binding ConnectionStatusColor}" Margin="0,0,5,0"
                                         VerticalAlignment="Center" />
                                <TextBlock Text="{Binding ConnectionStatusText}" Foreground="Gray"
                                           VerticalAlignment="Center" />
                                <Separator Margin="5,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                <Button Content="❌" ToolTip="{Binding Localization[AbortCountdown]}"
                                        VerticalAlignment="Center" Click="AbortCountdownButton_Click" Margin="0,0,5,0"
                                        Visibility="{Binding IsCountdownRunning, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Style="{StaticResource TransparentButtonStyle}" />
                                <Grid VerticalAlignment="Center" Margin="0,0,5,0" MinWidth="30">
                                    <TextBlock Text="{Binding CountdownText}" Foreground="Orange" FontWeight="Bold"
                                               HorizontalAlignment="Center"
                                               Visibility="{Binding IsCountdownRunning, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <Grid
                                        Visibility="{Binding IsCountdownRunning, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                        <TextBlock Text="{Binding Localization[Pause]}" Foreground="Red"
                                                   FontWeight="Bold"
                                                   HorizontalAlignment="Center"
                                                   Visibility="{Binding IsPaused, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <TextBlock Text="{Binding FightDurationText}" Foreground="White"
                                                   FontWeight="Bold"
                                                   HorizontalAlignment="Center"
                                                   Visibility="{Binding IsPaused, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                                    </Grid>
                                </Grid>
                                <Button x:Name="CountdownButton" Command="{Binding OpenCountdownOptionsCommand}"
                                        ToolTip="{Binding Localization[Countdown]}"
                                        Visibility="{Binding IsCountdownRunning, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                        Style="{StaticResource TransparentButtonStyle}">
                                    <TextBlock Text="🕒" Foreground="White" VerticalAlignment="Center" />
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal"
                                        Visibility="{Binding IsInSnapshotMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock Text="[快照模式] " Foreground="Orange" FontWeight="Bold"
                                           VerticalAlignment="Center" />
                                <TextBlock Text="{Binding LoadedSnapshotFileName}" Foreground="White"
                                           VerticalAlignment="Center" />
                                <Button Content="返回实时" Click="ResetButton_Click" Margin="10,0,0,0"
                                        Style="{StaticResource TransparentButtonStyle}" />
                            </StackPanel>
                        </Grid>
                    </DockPanel>
                </Border>

                <Grid Grid.Row="1">
                    <Grid.IsHitTestVisible>
                        <Binding Path="IsLocked" Converter="{StaticResource InverseBooleanConverter}" />
                    </Grid.IsHitTestVisible>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" /><RowDefinition Height="*" /><RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <views:DynamicGrid Grid.Row="0" Margin="5,5,5,0"
                                       ColumnDefinitionsSource="{StaticResource SharedGridColumnDefinitions}">
                        <TextBlock Grid.Column="0" Text="{Binding PlayerCount}"
                                   Style="{StaticResource HeaderLabel}" Foreground="White" HorizontalAlignment="Center" />
                        <Button Grid.Column="1" Content="{Binding Localization[CharacterName]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.Name}"
                                Style="{StaticResource HeaderButtonStyle}" Margin="5,0,0,0" />

                        <Button Grid.Column="2" Content="{Binding Localization[Score]}"
                                CommandParameter="{x:Static viewModels:MainViewModel+SortableColumns.FightPoint}"
                                Style="{StaticResource HeaderButtonStyle}" Foreground="Gold" />
                        <Button Grid.Column="3" Content="{Binding Localization[Profession]}"
                                CommandParameter="Profession" Style="{StaticResource HeaderButtonStyle}" />

                        <Button Grid.Column="4" Content="{Binding Localization[TotalDamage]}"
                                CommandParameter="TotalDamage" Style="{StaticResource HeaderButtonStyle}"
                                Foreground="OrangeRed" ToolTip="{Binding TotalDamageSumTooltip}" />
                        <Button Grid.Column="5" Content="{Binding Localization[TotalHealing]}"
                                CommandParameter="TotalHealing" Style="{StaticResource HeaderButtonStyle}"
                                Foreground="Cyan" ToolTip="{Binding TotalHealingSumTooltip}" />
                        <Button Grid.Column="6" Content="{Binding Localization[TotalDPS]}" CommandParameter="TotalDps"
                                Style="{StaticResource HeaderButtonStyle}" Foreground="Yellow"
                                ToolTip="{Binding TotalDpsSumTooltip}" />
                        <Button Grid.Column="7" Content="{Binding Localization[TotalHPS]}" CommandParameter="TotalHps"
                                Style="{StaticResource HeaderButtonStyle}" Foreground="LimeGreen"
                                ToolTip="{Binding TotalHpsSumTooltip}" />
                        <Button Grid.Column="8" Content="{Binding Localization[TakenDamage]}"
                                CommandParameter="TakenDamage" Style="{StaticResource HeaderButtonStyle}"
                                Foreground="DodgerBlue" HorizontalContentAlignment="Right"
                                ToolTip="{Binding TakenDamageSumTooltip}" />
                    </views:DynamicGrid>

                    <ListView Grid.Row="1" ItemsSource="{Binding Players}" Background="Transparent" BorderThickness="0"
                              HorizontalContentAlignment="Stretch" Margin="5,0,0,0"
                              ScrollViewer.CanContentScroll="False"
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Focusable" Value="False" />
                                <EventSetter Event="MouseDoubleClick" Handler="Player_MouseDoubleClick" />
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ItemTemplate>
                            <DataTemplate DataType="{x:Type viewModels:PlayerViewModel}">
                                <views:PlayerListItemControl />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Border Grid.Row="2" Background="#444" Margin="5" Padding="10" CornerRadius="5"
                            Visibility="{Binding IsSettingsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border.Resources>
                            <Style TargetType="TextBox">
                                <Setter Property="Padding" Value="3" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="#666" />
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="Padding" Value="3" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="#666" />
                            </Style>
                            <Style x:Key="UpDownButtonStyle" TargetType="Button">
                                <Setter Property="Padding" Value="3,0" />
                                <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                                <Setter Property="FontSize" Value="8" />
                                <Setter Property="Width" Value="15" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="#666" />
                                <Setter Property="Background" Value="#555" />
                                <Setter Property="Foreground" Value="White" />
                            </Style>
                        </Border.Resources>

                        <StackPanel>
                            <WrapPanel Orientation="Horizontal">
                                <CheckBox Content="{Binding Localization[SmartIdleMode]}"
                                          IsChecked="{Binding IsSmartIdleModeEnabled, Mode=TwoWay}"
                                          Foreground="White" VerticalAlignment="Center"
                                          ToolTip="{Binding Localization[SmartIdleMode_Tooltip]}"
                                          MinWidth="165" />

                                <CheckBox Content="{Binding Localization[PauseOnExit]}"
                                          IsChecked="{Binding IsPauseOnExitEnabled, Mode=TwoWay}"
                                          Foreground="White" VerticalAlignment="Center"
                                          Margin="10,0,0,0"
                                          MinWidth="165" />

                                <CheckBox Content="{Binding Localization[PauseOnSnapshot]}"
                                          IsChecked="{Binding IsPauseOnSnapshotEnabled, Mode=TwoWay}"
                                          Foreground="White" VerticalAlignment="Center"
                                          Margin="10,0,20,0"
                                          MinWidth="165" />

                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Localization[FontSize]}" Foreground="White"
                                               VerticalAlignment="Center" Margin="0,0,5,0"
                                               FontFamily="{Binding SelectedFontFamily}"
                                               FontSize="{Binding FontSize, Mode=OneWay}" />
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="0" Text="{Binding FontSize, Mode=TwoWay}"
                                                 TextAlignment="Center" Width="40" VerticalAlignment="Center" />
                                        <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="-1,0,0,0">
                                            <Button Content="▲" Height="11" Command="{Binding IncreaseFontSizeCommand}"
                                                    Style="{StaticResource UpDownButtonStyle}" />
                                            <Button Content="▼" Height="11" Command="{Binding DecreaseFontSizeCommand}"
                                                    Style="{StaticResource UpDownButtonStyle}" Margin="0,1,0,0" />
                                        </StackPanel>
                                    </Grid>
                                    <ComboBox ItemsSource="{Binding SystemFonts}"
                                              SelectedItem="{Binding SelectedFontFamily, Mode=TwoWay}"
                                              Width="160" Margin="10,0,0,0" VerticalAlignment="Center">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding Converter={StaticResource FontFamilyNameConverter}}"
                                                    FontFamily="{Binding}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                            </WrapPanel>

                            <TextBlock Text="{Binding Localization[WindowOpacity]}" Foreground="White"
                                       Margin="0,10,0,0" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Slider Grid.Column="0" x:Name="OpacitySlider" Minimum="0.3" Maximum="1.0"
                                        Value="{Binding WindowOpacity, Mode=TwoWay}"
                                        SmallChange="0.05" TickFrequency="0.05" />
                                <TextBlock Grid.Column="1"
                                           Text="{Binding Value, ElementName=OpacitySlider, StringFormat={}{0:P0}}"
                                           MinWidth="35" VerticalAlignment="Center" HorizontalAlignment="Right"
                                           Margin="5,0,0,0" Foreground="White" />
                            </Grid>

                            <Grid Margin="0,10,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0" Margin="0,0,10,0">
                                    <TextBlock Text="{Binding Localization[BackendAddress]}" Foreground="White" />
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" /><ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="0"
                                                 Text="{Binding BackendUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 VerticalAlignment="Center" />
                                        <Button Grid.Column="1" Content="{Binding Localization[Connect]}"
                                                Command="{Binding ConnectToBackendCommand}" Margin="5,0,0,0"
                                                Padding="10,3" />
                                    </Grid>
                                </StackPanel>

                                <StackPanel Grid.Column="1" Margin="0,0,10,0">
                                    <TextBlock Text="{Binding Localization[UIRefreshInterval]}" Foreground="White" />
                                    <ComboBox SelectedItem="{Binding UiUpdateInterval}">
                                        <sys:Int32>100</sys:Int32>
                                        <sys:Int32>250</sys:Int32>
                                        <sys:Int32>500</sys:Int32>
                                    </ComboBox>
                                </StackPanel>

                                <StackPanel Grid.Column="2">
                                    <TextBlock Text="{Binding Localization[Language]}" Foreground="White" />
                                    <ComboBox ItemsSource="{Binding Localization.SupportedLanguages}"
                                              SelectedItem="{Binding Localization.CurrentCulture, Mode=TwoWay}"
                                              DisplayMemberPath="Parent.NativeName" />
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Border>
                </Grid>

                <Border Grid.Row="0" Grid.RowSpan="2" Background="#A0000000" CornerRadius="5" Padding="15,10"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Visibility="{Binding IsNotificationVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Text="{Binding NotificationText}" Foreground="White" FontSize="16" />
                </Border>
            </Grid>
        </Grid>

        <Popup x:Name="CountdownOptionsPopup" PlacementTarget="{Binding ElementName=CountdownButton}"
               Placement="Bottom" StaysOpen="False" AllowsTransparency="True"
               IsOpen="{Binding IsCountdownOptionsPopupOpen, Mode=TwoWay}">
            <Border CornerRadius="5" Background="#CC222222" Padding="5" Margin="5"
                    Opacity="{Binding Opacity, ElementName=MainBorder}"
                    TextBlock.FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource AncestorType=Window}}">
                <StackPanel>
                    <Button
                        Content="{Binding DataContext.Localization[OneMinute], RelativeSource={RelativeSource AncestorType=Window}}"
                        Command="{Binding DataContext.StartCountdownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="60" Style="{StaticResource TransparentButtonStyle}" />
                    <Button
                        Content="{Binding DataContext.Localization[FiveMinutes], RelativeSource={RelativeSource AncestorType=Window}}"
                        Command="{Binding DataContext.StartCountdownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="300" Style="{StaticResource TransparentButtonStyle}" />
                    <Button
                        Content="{Binding DataContext.Localization[Custom], RelativeSource={RelativeSource AncestorType=Window}}"
                        Command="{Binding DataContext.OpenCustomCountdownCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        Style="{StaticResource TransparentButtonStyle}" />
                </StackPanel>
            </Border>
        </Popup>

        <Popup x:Name="CustomCountdownPopup" Placement="Center" StaysOpen="False" AllowsTransparency="True"
               IsOpen="{Binding IsCustomCountdownPopupOpen, Mode=TwoWay}"
               Opened="CustomCountdownPopup_Opened">
            <Border CornerRadius="5" Background="#DD222222" Padding="15"
                    Opacity="{Binding Opacity, ElementName=MainBorder}"
                    TextBlock.FontSize="{Binding DataContext.FontSize, RelativeSource={RelativeSource AncestorType=Window}}">
                <StackPanel>
                    <TextBlock Text="{Binding Localization[EnterCountdownMinutes]}" Foreground="White" />
                    <TextBox x:Name="CountdownTextBox" Margin="0,5,0,10"
                             Text="{Binding CustomCountdownMinutes, Mode=TwoWay}" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="{Binding Localization[Start]}" IsDefault="True"
                                Command="{Binding StartCustomCountdownCommand}" Margin="0,0,10,0" />
                        <Button Content="{Binding Localization[Cancel]}" IsCancel="True"
                                Command="{Binding CancelCustomCountdownCommand}" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Popup>
    </Grid>
</Window>